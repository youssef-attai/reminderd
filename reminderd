#!/usr/bin/env bash

# Reminders are stored in the following format:
# <time>: Epoch time
# <summary>: String
# <body>: String
# <icon>: Path to icon
# <repeat>: Seconds

# The reminder daemon will check for reminders every second.
# If a reminder is due, it will be displayed using dunstify, and then removed.
# If a reminder has a repeat value, it will be rescheduled.

REMINDERS_DIR="$HOME/.local/share/reminders"

# Utility functions to read reminder files
function get_due {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 1
}

function get_summary {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 2 | tail -n 1
}

function get_body {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 3 | tail -n 1
}

function get_icon {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 4 | tail -n 1
}

function get_repeat {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 5 | tail -n 1
}

function get_urgency {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 6 | tail -n 1
}

# Check if the reminders directory exists
function check_dir {
    if [ ! -d "$REMINDERS_DIR" ]; then
        mkdir "$REMINDERS_DIR"
    fi
}

# Check if the reminders directory is empty
function is_empty {
    if [ "$(ls -A $REMINDERS_DIR)" ]; then
        return 1
    else
        return 0
    fi
}

# Check if a reminder is due
function is_due {
    local reminder="$1"
    local now=$(date +%s)
    local due=$(cat "$reminder" | head -n 1)
    if [ "$now" -ge "$due" ]; then
        return 0
    else
        return 1
    fi
}

# Display a reminder
function display {
    local reminder_file="$1"

    due=$(get_due "$reminder_file")
    summary=$(get_summary "$reminder_file")
    body=$(get_body "$reminder_file")
    icon=$(get_icon "$reminder_file")
    urgency=$(get_urgency "$reminder_file")

    dunstify "$summary" "$body" -i "$icon" -t 0 -u "$urgency"
}

# Remove a reminder
function remove {
    local reminder="$1"
    rm "$reminder"
}

# Reschedule a reminder
function reschedule {
  local reminder_file="$1"
  local repeat=$(cat "$reminder_file" | head -n 5 | tail -n 1)
  local due=$(cat "$reminder_file" | head -n 1)
  local new_due=$((due + repeat))
  # Replace the first line of the reminder file with the new due time
  sed -i "1s/.*/$new_due/" "$reminder_file"
}

# Check for reminders
function check {
    for reminder in "$REMINDERS_DIR"/*; do
        if is_due "$reminder"; then
            display "$reminder"
            # If the reminder has a repeat value, reschedule it
            # Otherwise, remove it
            repeat=$(cat "$reminder" | head -n 5 | tail -n 1)
            if [ -z "$repeat" ]; then
                remove "$reminder"
            else
                reschedule "$reminder"
            fi
        fi
    done
}

# Main loop
function main {
    check_dir
    while true; do
        if ! is_empty; then
            check
        fi
        sleep 1
    done
}

main
