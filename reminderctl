#!/usr/bin/env bash

# This script is used to add, remove, and list reminders.
# It is meant to be used with the reminderd daemon.

REMINDERS_DIR="$HOME/.local/share/reminders"

# Utility functions to read reminder files
function get_due {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 1
}

function get_summary {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 2 | tail -n 1
}

function get_body {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 3 | tail -n 1
}

function get_icon {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 4 | tail -n 1
}

function get_repeat {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 5 | tail -n 1
}

function get_urgency {
    local reminder_file="$1"
    cat "$reminder_file" | head -n 6 | tail -n 1
}

# Utility function to print usages
function print_usage {
  echo "Usage: $0 {add|remove|list}"
  exit 1
}

function print_add_usage {
  echo "Usage: $0 add <due> <summary> [body] [icon] [repeat] [urgency]"
  exit 1
}

function print_remove_usage {
  echo "Usage: $0 remove <reminder_id>"
  exit 1
}

function add_reminder {
  local due="$1"
  local summary="$2"
  local body="$3"
  local icon="$4"
  local repeat="$5"
  local urgency="$6"

  if [[ -z "$due" ]]; then
    print_add_usage
    exit 1
  fi

  due_datetime=$(date -d "$due" +"%s")
  # if date is invalid, due_datetime will be empty
  if [[ -z "$due_datetime" ]]; then
    echo "Please enter a valid date."
    exit 1
  fi

  if [[ -z "$summary" ]]; then
    print_add_usage
    exit 1
  fi

  if [[ -z "$body" ]]; then
    body=""
  fi

  if [[ -z "$icon" ]]; then
    icon=""
  fi

  if [[ -z "$repeat" ]]; then
    repeat=""
  fi

  if [[ -z "$urgency" ]]; then
    urgency="normal"
  else
    case "$urgency" in
      low|normal|critical)
        ;;
      *)
        echo "Urgency must be low, normal, or critical."
        exit 1
        ;;
    esac
  fi

  reminder_id=$(uuidgen)
  reminder_file="$REMINDERS_DIR/$reminder_id"

  if [[ ! -d "$REMINDERS_DIR" ]]; then
    mkdir -p "$REMINDERS_DIR"
  fi

  echo -e "$due_datetime\n$summary\n$body\n$icon\n$repeat\n$urgency" > "$reminder_file"
}

function remove_reminder {
  local reminder_id="$1"

  if [[ -z "$reminder_id" ]]; then
    print_remove_usage
    exit 1
  fi

  reminder_file="$REMINDERS_DIR/$reminder_id"

  if [[ ! -f "$reminder_file" ]]; then
    echo "Reminder not found."
    exit 1
  fi

  rm "$reminder_file"
}

function list_reminders {
  if [[ ! -d "$REMINDERS_DIR" ]]; then
    echo "No reminders."
    exit 0
  fi

  if [[ ! "$(ls -A "$REMINDERS_DIR")" ]]; then
    echo "No reminders."
    exit 0
  fi

  for reminder_file in "$REMINDERS_DIR/"*; do
    reminder_id=$(basename "$reminder_file")

    due=$(get_due "$reminder_file")
    summary=$(get_summary "$reminder_file")
    body=$(get_body "$reminder_file")
    icon=$(get_icon "$reminder_file")
    repeat=$(get_repeat "$reminder_file")
    urgency=$(get_urgency "$reminder_file")

    echo -e "\n$reminder_id"
    echo "  Due: $due"
    echo "  Summary: $summary"
    echo "  Body: $body"
    echo "  Icon: $icon"
    echo "  Repeat: $repeat"
    echo "  Urgency: $urgency"
  done
}

case "$1" in
  add)
    # pass all arguments to add_reminder without the first one
    shift
    add_reminder "$@"
    ;;
  remove)
    # pass all arguments to remove_reminder without the first one
    shift
    remove_reminder "$@"
    ;;
  list)
    list_reminders
    ;;
  *)
    print_usage
    exit 1
esac
